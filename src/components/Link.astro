---
import { type Link } from "~/consts/index";

// this is a self component (Link in this case)
// self be ref to the same component
const Self = Astro.self

interface Props {
  item: Link;
}

const { item } = Astro.props;
const { subpath, text, path, rel, target, icon } = item
const url = path.concat(subpath?.map((item) => item.path).join('') ?? '')
const sanitizeText = (str: string) => str.toLowerCase().replace(/[\s,]+/g, '-')
const sText = sanitizeText(text)
---

<li>
  {
	  subpath?.length ? (
      <button
        class="flex items-center"
        aria-control={`dropdown-${sText}`}
        data-colapse-toggle={`dropdown-${sText}`}
      >
        {icon && <span class="mr-2">{icon}</span>}
        <span class="ms-3">
          {text}
        </span>
        <svg class="w-3 h-3" aria-hidden="true" fill="none" viewBox="0 0 10 6">
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="m1 1 4 4 4-4"
          />
        </svg>
      </button>
      <ul id={`dropdown-${sText}`} class="hidden py-2 space-y-2">
        {subpath.map((subItem) => (<Self item={subItem} />))}
      </ul>
    ) : (
      <a
        class=""
        href={url}
        rel={rel}
        target={target}
      >
        {icon && <span class="mr-2">{icon}</span>}
        <span class="ms-3">{text}</span>
      </a>
    )
  }
</li>
